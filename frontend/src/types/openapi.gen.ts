/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/v1/tenants/self": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Aktif tenant bilgisini getir */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description Aktif tenant slug'ı. */
                    "X-Tenant": components["parameters"]["XTenant"];
                    /** @description İçerik dili (ör. de, tr, en). Yoksa tenant defaultLocale. */
                    "Accept-Language"?: components["parameters"]["AcceptLanguage"];
                    /** @description ETag ile koşullu istek. */
                    "If-None-Match"?: components["parameters"]["IfNoneMatch"];
                    /** @description Last-Modified ile koşullu istek. */
                    "If-Modified-Since"?: components["parameters"]["IfModifiedSince"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        ETag: components["headers"]["ETag"];
                        "Last-Modified": components["headers"]["Last-Modified"];
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["TenantSelf"];
                    };
                };
                /** @description Not Modified */
                304: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Error */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/locales": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Desteklenen diller */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description Aktif tenant slug'ı. */
                    "X-Tenant": components["parameters"]["XTenant"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": string[];
                    };
                };
                /** @description Error */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/theme": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Design tokens (styled-components için) */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description Aktif tenant slug'ı. */
                    "X-Tenant": components["parameters"]["XTenant"];
                    /** @description İçerik dili (ör. de, tr, en). Yoksa tenant defaultLocale. */
                    "Accept-Language"?: components["parameters"]["AcceptLanguage"];
                    /** @description ETag ile koşullu istek. */
                    "If-None-Match"?: components["parameters"]["IfNoneMatch"];
                    /** @description Last-Modified ile koşullu istek. */
                    "If-Modified-Since"?: components["parameters"]["IfModifiedSince"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        ETag: components["headers"]["ETag"];
                        "Last-Modified": components["headers"]["Last-Modified"];
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ThemeTokens"];
                    };
                };
                /** @description Not Modified */
                304: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Error */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/navigation": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Navigasyon ağaçları (primary/footer/legal) */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description Aktif tenant slug'ı. */
                    "X-Tenant": components["parameters"]["XTenant"];
                    /** @description İçerik dili (ör. de, tr, en). Yoksa tenant defaultLocale. */
                    "Accept-Language"?: components["parameters"]["AcceptLanguage"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Navigation"];
                    };
                };
                /** @description Error */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/pages": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Sayfa/İçerik listesi (deterministik)
         * @description Sıralama garantisi: **updatedAt DESC, id ASC**.
         *
         */
        get: {
            parameters: {
                query?: {
                    page?: components["parameters"]["Page"];
                    limit?: components["parameters"]["Limit"];
                    /** @description Basit arama sorgusu (title, keywords, tags). */
                    q?: components["parameters"]["Q"];
                    type?: components["parameters"]["Type"];
                };
                header: {
                    /** @description Aktif tenant slug'ı. */
                    "X-Tenant": components["parameters"]["XTenant"];
                    /** @description İçerik dili (ör. de, tr, en). Yoksa tenant defaultLocale. */
                    "Accept-Language"?: components["parameters"]["AcceptLanguage"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        ETag: components["headers"]["ETag"];
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ListResponse"];
                    };
                };
                /** @description Error */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/pages/{slugOrId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Sayfa/İçerik detayı */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description Aktif tenant slug'ı. */
                    "X-Tenant": components["parameters"]["XTenant"];
                    /** @description İçerik dili (ör. de, tr, en). Yoksa tenant defaultLocale. */
                    "Accept-Language"?: components["parameters"]["AcceptLanguage"];
                };
                path: {
                    slugOrId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        ETag: components["headers"]["ETag"];
                        "Last-Modified": components["headers"]["Last-Modified"];
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["PageDetail"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
                /** @description Error */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Basit arama */
        get: {
            parameters: {
                query?: {
                    /** @description Basit arama sorgusu (title, keywords, tags). */
                    q?: components["parameters"]["Q"];
                    page?: components["parameters"]["Page"];
                    limit?: components["parameters"]["Limit"];
                };
                header: {
                    /** @description Aktif tenant slug'ı. */
                    "X-Tenant": components["parameters"]["XTenant"];
                    /** @description İçerik dili (ör. de, tr, en). Yoksa tenant defaultLocale. */
                    "Accept-Language"?: components["parameters"]["AcceptLanguage"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ListResponse"];
                    };
                };
                /** @description Error */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/users/me": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Oturum sahibi kullanıcı */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description Aktif tenant slug'ı. */
                    "X-Tenant": components["parameters"]["XTenant"];
                    /** @description İçerik dili (ör. de, tr, en). Yoksa tenant defaultLocale. */
                    "Accept-Language"?: components["parameters"]["AcceptLanguage"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Me"];
                    };
                };
                /** @description Unauthorized */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Error */
                "4XX": {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/users/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Email+şifre ile giriş */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description Aktif tenant slug'ı. */
                    "X-Tenant": components["parameters"]["XTenant"];
                    /** @description İçerik dili (ör. de, tr, en). Yoksa tenant defaultLocale. */
                    "Accept-Language"?: components["parameters"]["AcceptLanguage"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["LoginPayload"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        /** @description Oturum cookie’si */
                        "Set-Cookie"?: string;
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["LoginResult"];
                    };
                };
                /** @description Unauthorized */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/users/register": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Yeni kullanıcı kaydı */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description Aktif tenant slug'ı. */
                    "X-Tenant": components["parameters"]["XTenant"];
                    /** @description İçerik dili (ör. de, tr, en). Yoksa tenant defaultLocale. */
                    "Accept-Language"?: components["parameters"]["AcceptLanguage"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["RegisterPayload"];
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id?: string;
                            email?: string;
                            role?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/users/change-password": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Şifre değiştirme */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description Aktif tenant slug'ı. */
                    "X-Tenant": components["parameters"]["XTenant"];
                    /** @description İçerik dili (ör. de, tr, en). Yoksa tenant defaultLocale. */
                    "Accept-Language"?: components["parameters"]["AcceptLanguage"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["ChangePasswordPayload"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @example true */
                            ok?: boolean;
                        };
                    };
                };
                /** @description Unauthorized */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Forbidden (CSRF/bearer yok) */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Error"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/users/refresh": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Oturum yenileme */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description Aktif tenant slug'ı. */
                    "X-Tenant": components["parameters"]["XTenant"];
                    /** @description İçerik dili (ör. de, tr, en). Yoksa tenant defaultLocale. */
                    "Accept-Language"?: components["parameters"]["AcceptLanguage"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            ok?: boolean;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/users/logout": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Çıkış */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description Aktif tenant slug'ı. */
                    "X-Tenant": components["parameters"]["XTenant"];
                    /** @description İçerik dili (ör. de, tr, en). Yoksa tenant defaultLocale. */
                    "Accept-Language"?: components["parameters"]["AcceptLanguage"];
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        Error: {
            error: {
                /** @example FORBIDDEN */
                code: string;
                message: string;
                details?: {
                    [key: string]: unknown;
                };
                /** Format: uuid */
                traceId?: string;
            };
        };
        TenantSelf: {
            id: string;
            slug: string;
            /** @example de */
            defaultLocale: string;
            locales?: string[];
            domainMap?: {
                domain?: string;
                locale?: string;
            }[];
        };
        /** @description BE tarafında özgür şema; FE mapping yapacak. */
        ThemeTokens: {
            [key: string]: unknown;
        };
        NavItem: {
            id: string;
            label: string;
            href?: string | null;
            order?: number | null;
            children?: components["schemas"]["NavItem"][];
        };
        Navigation: {
            primary?: components["schemas"]["NavItem"][];
            footer?: components["schemas"]["NavItem"][];
            legal?: components["schemas"]["NavItem"][];
        };
        PageListItem: {
            id: string;
            slug: string;
            /** @enum {string} */
            type: "product" | "service" | "part" | "article" | "page";
            title: string;
            excerpt?: string | null;
            cover?: string | null;
            /** Format: date-time */
            updatedAt: string;
            locale?: string;
            seo?: {
                title?: string;
                description?: string;
                keywords?: string[];
            };
        };
        PageDetail: components["schemas"]["PageListItem"] & {
            /** @description Blok bazlı içerik, tip/props özgür. */
            content?: {
                type?: string;
                data?: {
                    [key: string]: unknown;
                };
            }[];
            gallery?: string[];
        };
        ListResponse: {
            items: components["schemas"]["PageListItem"][];
            /** @example 1 */
            page?: number;
            /** @example 24 */
            limit?: number;
            /** @example 123 */
            total?: number;
            /** @description Cursor/URL */
            next?: string | null;
        };
        Me: {
            _id: string;
            /** Format: email */
            email: string;
            /** @enum {string} */
            role: "admin" | "editor" | "viewer";
        };
        LoginPayload: {
            /** Format: email */
            email: string;
            password: string;
        };
        LoginResult: {
            /** Format: email */
            email: string;
            /** @enum {string} */
            role: "admin" | "editor" | "viewer";
            /** @description Opsiyonel access token */
            at?: string;
            csrf?: string;
        };
        RegisterPayload: {
            /** Format: email */
            email: string;
            password: string;
            /**
             * @default admin
             * @enum {string}
             */
            role: "admin" | "editor" | "viewer";
        };
        ChangePasswordPayload: {
            currentPassword: string;
            newPassword: string;
            confirmNewPassword: string;
        };
    };
    responses: never;
    parameters: {
        /** @description Aktif tenant slug'ı. */
        XTenant: string;
        /** @description İçerik dili (ör. de, tr, en). Yoksa tenant defaultLocale. */
        AcceptLanguage: string;
        /** @description ETag ile koşullu istek. */
        IfNoneMatch: string;
        /** @description Last-Modified ile koşullu istek. */
        IfModifiedSince: string;
        Page: number;
        Limit: number;
        /** @description Basit arama sorgusu (title, keywords, tags). */
        Q: string;
        Type: "product" | "service" | "part" | "article" | "page";
    };
    requestBodies: never;
    headers: {
        /** @description Response checksum. */
        ETag: string;
        /** @description Kaynağın son değişim zamanı. */
        "Last-Modified": string;
    };
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
